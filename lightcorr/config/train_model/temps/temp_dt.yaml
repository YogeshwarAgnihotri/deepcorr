#####################Dataset loading, splitting and generating settings#####################
load_pregenerated_dataset: True  # If true, load the dataset; otherwise, generate the dataset
pregenerated_dataset_path: 
  "/home/yogeshwar/datasets/deepcorr_pregen/deepcorr_9008_2252" 
#pregenerated_dataset_path: "/home/yagnihotri/datasets/deepcorr/deepcorr_pregen/deepcorr_9008_2252"  # Path to the preprocessed dataset

# Dataset generation settings
# ONLY USED IF load_pregenerated_dataset IS FALSE
base_dataset_path: "/home/yogeshwar/datasets/deepcorr_original"  # Path to the DeepCorr dataset
#base_dataset_path: "/home/yagnihotri/datasets/deepcorr_original"  # Path to the DeepCorr dataset

train_ratio: 0.8  # Training set ratio
flow_size: 300  # Flow sizes
negative_samples: 1  # Number of negative samples
load_all_data: False  # If true, load all data; otherwise, only load flows with minimum specified packets

# Load dataset fully into memory, if false keeps using memmap arrays
load_dataset_into_memory: False

######################################Run Settings###########################################
model_type: "decision_tree"  # "decision_tree" , "random_forest", "xgbClassifier"
single_model_training_config: 
  "none" 

run_folder_path: "/home/yogeshwar/master_thesis_corr/lightcorr"  # Path to the folder where the run folder will be created
#run_folder_path: "/home/yagnihotri/projects/corr/lightcorr"

######################################Validation Settings######################################
validation_settings:
  run_validation: true # If true, run validation, otherwise skip validation
  roc_plot_enabled: true  # If true, generate ROC plot
  cross_validation:
    cv: 5  # Number of folds for cross-validation
    n_jobs: -1  # Number of jobs to run in parallel. -1 means using all processors
    verbose: 100  # Verbosity level for cross-validation

######################################Single Model Training Settings########################
# Single Model Training Settings (For training without hyperparameter search)
# structure: 
#   model_type: 
#     config_name: 
#       hyperparameter_name: hyperparameter_value
#       ...
single_model_training:
  decision_tree:
    default:
      criterion: "gini"  # Function to measure the quality of a split
      splitter: "best"  # Strategy to choose the split at each node
      max_depth: null  # Maximum depth of the tree
      min_samples_split: 2  # Minimum number of samples required to split an internal node
      min_samples_leaf: 1  # Minimum number of samples required to be at a leaf node
      min_weight_fraction_leaf: 0.0  # Minimum weighted fraction of the sum total of weights required at a leaf node
      max_features: null  # Number of features to consider for the best split
      random_state: null  # Controls the randomness of the estimator
      max_leaf_nodes: null  # Maximum number of leaf nodes
      min_impurity_decrease: 0.0  # A node will be split if the decrease in impurity is greater than this value
      class_weight: null  # Weights associated with classes
      ccp_alpha: 0.0  # Complexity parameter used for Minimal Cost-Complexity Pruning
    best:
      splitter: "best"
      min_samples_split: 10
      min_samples_leaf: 2
      min_impurity_decrease: 0.0
      max_features: 1.0
      max_depth: 60
      criterion: "entropy"
      class_weight: {0: 1, 1: 2}
      ccp_alpha: 0.0